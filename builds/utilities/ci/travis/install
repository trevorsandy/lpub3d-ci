#!/bin/bash
#
# Travis-ci build [install] procedures
#
# Trevor SANDY <trevor.sandy@gmail.com>
# Last Update: May 22, 2025
# Copyright (C) 2017 - 2025 by Trevor SANDY
#

LP3D_GITHUB_URL="https://github.com/trevorsandy"
LP3D_LIBS_BASE=${LP3D_GITHUB_URL}/lpub3d_libs/releases/download/v1.0.1

cd $LP3D_BUILD_FOLDER

# source update_config_files.sh"
_PRO_FILE_PWD_=$PWD/mainApp;
source builds/utilities/update-config-files.sh
# Install qt5 on Linux
if [[ "$TRAVIS_OS_NAME" = "linux" && (("$LP3D_COMPILE_SOURCE" = "true" && -z "$LP3D_BUILD_PKG") || \
     ("$LP3D_BUILD_PKG" = "yes" && "$LP3D_BUILD_OS" = "appimage")) && -z "$LP3D_DEPLOY_PACKAGES" ]]; then
    if [[ "$LP3D_QT_BASE" = "515" && "$TRAVIS_CPU_ARCH" = "amd64" ]]; then
        sudo apt-get install -qq qt515base; source /opt/qt515/bin/qt515-env.sh;
    fi
fi
# Setup 3rd party base distribution directory
if [ ! -d "$LP3D_DIST_DIR_BASE" ]; then
  mkdir -p "$LP3D_DIST_DIR_BASE"
  if test -d "$LP3D_DIST_DIR_BASE"; then echo "Created 3rd party base dir $LP3D_DIST_DIR_BASE"; fi
else
  echo "Using cached 3rd party base dir $LP3D_DIST_DIR_BASE"
fi
# Setup ldraw parts library directory
if [ ! -d "$LP3D_LDRAW_DIR" ]; then
  mkdir -p "$LP3D_LDRAW_DIR"
  if [ -d "$LP3D_LDRAW_DIR" ]; then
    echo "Created LDraw library $LP3D_LDRAW_DIR"
    find $LP3D_LDRAW_DIR -maxdepth 1 -type d
  fi
else
  echo "Using cached LDraw library $LP3D_LDRAW_DIR"
fi
# Setup releases directory
if [ ! -d "$LP3D_RELEASES_DIR" ]; then
  mkdir -p "${LP3D_RELEASES_DIR}/updates"
  mkdir -p "${LP3D_RELEASES_DIR}/downloads"
  mkdir -p "${LP3D_RELEASES_DIR}/logs"
  if test -d "${LP3D_RELEASES_DIR}"; then echo "Created release directory $LP3D_RELEASES_DIR"; fi
else
  echo "Using cached release directory $LP3D_RELEASES_DIR"
fi
# setup platform-specific 3rd party distribution directory
if [ -z "$LP3D_DEPLOY_PACKAGES" ]; then
  # Asset extension
  case ${LP3D_BUILD_OS} in
  alpine|archlinux)
      LP3D_ASSET_EXT="pkg.tar.zst" ;;
  appimage)
      LP3D_ASSET_EXT="AppImage" ;;
  centos|fedora)
      LP3D_ASSET_EXT="rpm" ;;
  debian|ubuntu)
      LP3D_ASSET_EXT="deb" ;;
  macos)
      LP3D_ASSET_EXT="dmg" ;;
    esac
  export LP3D_ASSET_EXT

  # 3rd party distribution path specific for each distribution
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    LP3D_DIST_DIR_PATH=${LP3D_DIST_DIR_BASE}/${LP3D_BUILD_OS}_${TRAVIS_CPU_ARCH}
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    LP3D_DIST_DIR_PATH=${LP3D_DIST_DIR_BASE}/${LP3D_BUILD_OS}_$TRAVIS_OSX_IMAGE}
  fi
  if [ ! -d "${LP3D_DIST_DIR_PATH}" ]; then
    mkdir -p "${LP3D_DIST_DIR_PATH}"
  fi
  export LP3D_DIST_DIR_PATH

  # Manage 3rd party repository cache - deleting a component will trigger that component's rebuild
  if [ -n "$LP3D_BUILD_3RD" ]; then
    LP3D_LDGLITE_DIR=${LP3D_DIST_DIR_PATH}/${LP3D_VER_LDGLITE}
    LP3D_LDVIEW_DIR=${LP3D_DIST_DIR_PATH}/${LP3D_VER_LDVIEW}
    LP3D_POVRAY_DIR=${LP3D_DIST_DIR_PATH}/${LP3D_VER_POVRAY}
    LP3D_MESALIB_DIR=${LP3D_DIST_DIR_PATH}/${LP3D_VER_MESALIB}
    if [[ "$LP3D_BUILD_LDGLITE" = 1 && -d "$LP3D_LDGLITE_DIR" ]]; then
      sudo rm -rf "$LP3D_LDGLITE_DIR" && echo "cached $LP3D_LDGLITE_DIR deleted"
    fi;
    if [[ "$LP3D_BUILD_LDVIEW" = 1 && -d "$LP3D_LDVIEW_DIR" ]]; then
      sudo rm -rf "$LP3D_LDVIEW_DIR" && echo "cached $LP3D_LDVIEW_DIR deleted"
    fi;
    if [[ "$LP3D_BUILD_POVRAY" = 1 && -d "$LP3D_POVRAY_DIR" ]]; then
      sudo rm -rf "$LP3D_POVRAY_DIR" && echo "cached $LP3D_POVRAY_DIR deleted"
    fi;
    if [[ "$LP3D_BUILD_MESALIB" = 1 && -d "$LP3D_MESALIB_DIR" ]]; then
      sudo rm -rf "$LP3D_MESALIB_DIR" && echo "cached $LP3D_MESALIB_DIR deleted"
    fi
  fi
fi
# Update docker-engine, docker-compose and define release folder path
if [ "$TRAVIS_OS_NAME" = "linux" ]; then
  if [[ "$LP3D_BUILD_PKG" = "yes" && "$LP3D_BUILD_OS" != "appimage" && -z "$LP3D_COMPILE_SOURCE" && -z "$LP3D_DEPLOY_PACKAGES" ]]; then
    curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64 https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update -qq
    sudo apt-get -y install docker-ce
    docker version
    sudo rm /usr/local/bin/docker-compose
    curl -L https://github.com/docker/compose/releases/download/${LP3D_DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    chmod +x docker-compose
    sudo mv docker-compose /usr/local/bin
    docker-compose version
  fi;
  # AppImage setup, download LDraw library archive files, and setup build directory
  if [[ "$LP3D_BUILD_PKG" = "yes" && "$LP3D_BUILD_OS" = "appimage" && -z "$LP3D_COMPILE_SOURCE" && -z "$LP3D_DEPLOY_PACKAGES" ]]; then
    echo "Download AppImage archive libraries..."
    if [ ! -d "${LP3D_DIST_DIR_PATH}" ]; then
       mkdir -p "${LP3D_DIST_DIR_PATH}"
    fi
    wget ${LP3D_LIBS_BASE}/lpub3dldrawunf.zip -O ${LP3D_DIST_DIR_PATH}/lpub3dldrawunf.zip
    if [ ! -f "${LP3D_DIST_DIR_PATH}/complete.zip" ]; then
       wget ${LP3D_LIBS_BASE}/complete.zip -O ${LP3D_DIST_DIR_PATH}/complete.zip
    fi
    if [ ! -f "${LP3D_DIST_DIR_PATH}/tenteparts.zip" ]; then
       wget ${LP3D_LIBS_BASE}/tenteparts.zip -O ${LP3D_DIST_DIR_PATH}/tenteparts.zip
    fi
    if [ ! -f "${LP3D_DIST_DIR_PATH}/vexiqparts.zip" ]; then
       wget ${LP3D_LIBS_BASE}/tenteparts.zip -O ${LP3D_DIST_DIR_PATH}/vexiqparts.zip
    fi
    if [ ! -d "../AppDir" ]; then
       mkdir -p ../AppDir
    fi
    export AppImageBuildPath=$(cd ../ && echo "$PWD/AppDir")
  fi
fi
# Install qt5 on MacOS, download LDraw library archive files, and setup macos 3rd party distribution directory
if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  if [[ ("$LP3D_COMPILE_SOURCE" = "true" && -z "$LP3D_BUILD_PKG") || ("$LP3D_BUILD_PKG" = "yes" && "$LP3D_BUILD_OS" = "macos") ]]; then
    echo "Force linking to 'keg-only' instance of Qt..."
    brew link --force qt5
    echo "Downloading archive libraries..."
    wget ${LP3D_LIBS_BASE}/complete.zip -O ../complete.zip && cp -f ../complete.zip mainApp/extras
    wget ${LP3D_LIBS_BASE}/lpub3dldrawunf.zip -O mainApp/extras/lpub3dldrawunf.zip
    wget ${LP3D_LIBS_BASE}/tenteparts.zip -O mainApp/extras/tenteparts.zip
    wget ${LP3D_LIBS_BASE}/vexiqparts.zip -O mainApp/extras/vexiqparts.zip
    if [ ! -d ${HOME}/Library/ldraw ]; then
      ln -sf "$LP3D_LDRAW_DIR" "${HOME}/Library/ldraw" &&
      if test -d "${HOME}/Library/ldraw"; then echo "$LP3D_LDRAW_DIR linked to ${HOME}/Library/ldraw"; fi
    fi
    [ ! -d "../dmgbuild" ] && mkdir -p ../dmgbuild;
    export DmgBuildPath=$(cd ../ && echo "$PWD/dmgbuild")
  fi
fi
# List global and local 'LP3D_*' environment variables - use 'env' for 'exported' variables
echo && echo "LP3D* environment variables:" && compgen -v | grep LP3D_ | while read line; do echo $line=${!line};done
