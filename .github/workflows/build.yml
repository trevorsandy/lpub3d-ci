# Build, check and deploy LPub3D
# Trevor SANDY <trevor.sandy@gmail.com>
# Last Update: July 09, 2021
# Copyright (c) 2021 by Trevor SANDY
#
name: Builds

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-linux:
    if: "!contains(github.event.head_commit.message, 'SKIP_CI')"
    #if: ${{ false }} # suspend
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: # ubuntu-amd64, ubuntu-arm64, ubuntu-amd64-appimage, ubuntu-arm64-appimage, fedora-amd64, archlinux-amd64
        BUILD: [ ubuntu-amd64, ubuntu-arm64, ubuntu-amd64-appimage, fedora-amd64, archlinux-amd64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Artifact Path
        run: |
          echo "LP3D_COMMIT_MSG=$(echo ${{ github.event.head_commit.message }} | awk '{print toupper($0)}')" >> ${GITHUB_ENV}
          echo "LP3D_3RD_PARTY_PATH=$(cd ../ && echo "$PWD/third_party")" >> ${GITHUB_ENV}
          echo "LP3D_BUILDPKG_PATH=$(cd ../ && echo "$PWD/buildpkg")" >> ${GITHUB_ENV}
      - name: Cache Third-party
        id: cache-third-party
        uses: actions/cache@v2
        with:
          path: ${{ env.LP3D_3RD_PARTY_PATH }}
          key: third-party-${{ secrets.THIRD_PARTY_CACHE }}
      - name: Build ${{ matrix.BUILD }}
        run: bash -ex builds/utilities/ci/github/linux-build.sh
        env:
          BUILD: ${{ matrix.BUILD }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: List Artifacts
        run: test -d ${{ env.LP3D_BUILDPKG_PATH }} && ls -alFR ${{ env.LP3D_BUILDPKG_PATH }} || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.BUILD }}-download
          path: ${{ env.LP3D_BUILDPKG_PATH }}/*

  build-macos:
    if: "!contains(github.event.head_commit.message, 'SKIP_CI')"
    #if: ${{ false }} # suspend
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Artifact path
        run: |
          echo "LP3D_COMMIT_MSG=$(echo ${{ github.event.head_commit.message }} | awk '{print toupper($0)}')" >> ${GITHUB_ENV}
          echo "LP3D_3RD_PARTY_PATH=$(cd ../ && echo "$PWD/third_party")" >> ${GITHUB_ENV}
          echo "LP3D_BUILDPKG_PATH=$(cd ../ && echo "$PWD/buildpkg")" >> ${GITHUB_ENV}
      - name: Cache Third-party
        id: cache-third-party
        uses: actions/cache@v2
        with:
          path: ${{ env.LP3D_3RD_PARTY_PATH }}
          key: third-party-${{ secrets.THIRD_PARTY_CACHE }}
      - name: Buil macOS
        run: bash -ex builds/utilities/ci/github/macos-build.sh
      - name: List Artifacts
        run:  test -d ${{ env.LP3D_BUILDPKG_PATH }} && ls -alFR ${{ env.LP3D_BUILDPKG_PATH }} || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-download
          path: ${{ env.LP3D_BUILDPKG_PATH }}/*

  build-windows:
    if: "!contains(github.event.head_commit.message, 'SKIP_CI')"
    #if: ${{ false }} # suspend
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Artifact Path
        run: |
          echo "LP3D_COMMIT_MSG=${{ github.event.head_commit.message }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "LP3D_3RD_PARTY_PATH=$(Join-Path (resolve-path ..\) 'third_party')" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "LP3D_BUILDPKG_PATH=$(Join-Path (resolve-path ..\) 'buildpkg')" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "LP3D_BUILD_BASE=$(resolve-path ..\)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ env.LP3D_BUILD_BASE }}\Qt
          key: qt-windows-${{ env.QT_CACHE }}
      - name: Cache Third-party # distribution folder
        id: cache-third-party
        uses: actions/cache@v2
        with:
          path: ${{ env.LP3D_3RD_PARTY_PATH }}
          key: third-party-${{ secrets.THIRD_PARTY_CACHE }}
      - name: Windows 8.1 SDK
        run: |
          Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
          Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"
        shell: powershell
      - name: Qt MSVC 2019 64bit # path: ..\Qt\5.15.2\msvc2019_64\bin
        uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          host: windows
          arch: win64_msvc2019_64
          dir: ${{ env.LP3D_BUILD_BASE }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Qt MSVC 2019 32bit # path: ..\Qt\5.15.2\msvc2019\bin
        uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          host: windows
          arch: win32_msvc2019
          dir: ${{ env.LP3D_BUILD_BASE }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Build Windows
        run: .\builds\utilities\ci\github\windows-build.bat
        shell: cmd
      - name: List Artifacts
        run: If (Test-Path -Path ${{ env.LP3D_BUILDPKG_PATH }}) { Get-ChildItem -Path ${{ env.LP3D_BUILDPKG_PATH }} â€“Recurse }
      - name: Upload Update Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: updates
          path: ${{ env.LP3D_BUILDPKG_PATH }}\Updates\*
      - name: Upload Download Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-download
          path: ${{ env.LP3D_BUILDPKG_PATH }}\Downloads\*

  build-deploy:
    if: |
      !contains(github.event.head_commit.message, 'SKIP_DEPLOY') &&
      (contains(github.event.head_commit.message, 'BUILD_ALL') || github.event_name == 'workflow_dispatch')
    # if: ${{ false }} # disable for now
    name: Publish Assets
    needs: [ build-linux, build-macos, build-windows ] # build-linux, build-macos, build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Assets Path
        run: |
          echo "LP3D_COMMIT_MSG=$(echo ${{ github.event.head_commit.message }} | awk '{print toupper($0)}')" >> ${GITHUB_ENV}
          echo "LP3D_BUILD_ASSETS=$(cd ../ && echo "$PWD/assets")" >> ${GITHUB_ENV}
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with: # omit 'with: name:' to download all artifacts
          path: ${{ env.LP3D_BUILD_ASSETS }}
      - name: List Assets
        run: ls -alFR
        working-directory: ${{ env.LP3D_BUILD_ASSETS }}
      - name: Deploy Assets
        run: bash -ex builds/utilities/ci/github/build-deploy.sh
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GPG_SIGN_KEY_ALIAS: ${{ secrets.GPG_SIGN_KEY_ALIAS }}
          GPG_INIT_PASSPHRASE: ${{ secrets.GPG_INIT_PASSPHRASE }}
          GPG_SIGN_PASSPHRASE: ${{ secrets.GPG_SIGN_PASSPHRASE }}
          SOURCEFORGE_RSA_KEY: ${{ secrets.SOURCEFORGE_RSA_KEY }}
